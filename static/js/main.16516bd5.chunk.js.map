{"version":3,"sources":["components/first.js","index.js"],"names":["First","state","toggleView","loadingtoggle","jikanUrl","searchNameInput","yourName","searchGenreInput","yourGenre","genreTitles","genrePage","searchName","bind","onSubmitName","searchGenre","onSubmitGenre","makeNameCall","makeGenreCall","event","this","setState","target","value","console","log","jikanBaseUrl","page","fetch","then","response","json","data","animeName","animeImage","animeSynopsis","animeEpisodeCount","i","length","titleLoop","imageLoop","src","alt","loadMoreTitles","onClick","displayAnimeInfo","display","loading","className","htmlFor","name","onChange","cols","rows","placeholder","options","genreMap","style","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16516bd5.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport genreMap from './genremap.json'\n\n\nconst jikanBaseUrl = 'https://api.jikan.moe/v3/'\n\nclass First extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            toggleView: 'on',\n            loadingtoggle: 'on',\n            jikanUrl: '',\n            searchNameInput: '',\n            yourName: '',\n            searchGenreInput: '',\n            yourGenre: '',\n            genreTitles: [],\n            genrePage: 1,\n        }\n\n        this.searchName = this.searchName.bind(this)\n        this.onSubmitName = this.onSubmitName.bind(this)\n        this.searchGenre = this.searchGenre.bind(this)\n        this.onSubmitGenre = this.onSubmitGenre.bind(this)\n        this.makeNameCall = this.makeNameCall.bind(this)\n        this.makeGenreCall = this.makeGenreCall.bind(this)\n    }\n\n    searchName(event) {\n        this.setState({\n            searchNameInput: event.target.value,\n            yourName: event.target.value,\n        }, () => {\n            console.log(this.state.yourName)\n        })\n    }\n\n    searchGenre(event) {\n        this.setState({\n            searchGenreInput: event,\n            yourGenre: event.value,\n        }, () => {\n            console.log(this.state.yourGenre)\n        })\n    }\n\n    onSubmitName() {\n        if(this.state.yourName !== '') {\n            this.setState({\n                toggleView: 'off',\n                jikanUrl: jikanBaseUrl + 'search/anime?q=' + this.state.yourName,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.makeNameCall()\n            })\n        }\n    }\n\n    onSubmitGenre(page) {\n        page = this.state.genrePage\n        if(this.state.yourGenre !== '') {\n            this.setState({\n                loadingtoggle: 'off',\n                jikanUrl: jikanBaseUrl + 'genre/anime/' + this.state.yourGenre + '/' + page,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.setState({\n                    genrePage: this.state.genrePage + 1\n                })\n                this.makeGenreCall()\n            })\n        }\n    }\n\n    makeNameCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n                this.setState({\n                    animeName: [data['results'][0]['title']],\n                    animeImage: [data['results'][0]['image_url']],\n                    animeSynopsis: [data['results'][0]['synopsis']],\n                    animeEpisodeCount: [data['results'][0]['episodes']],\n                }, () => {\n                    console.log(this.state.animeImage)\n                    this.setState({\n                        loadingtoggle: 'on',\n                    })\n                })\n        })\n    }\n\n    makeGenreCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            for(var i = 0; i < data['anime'].length; i++) {\n                var titleLoop = [data['anime'][i]['title']]\n                var imageLoop = [data['anime'][i]['image_url']]\n                this.setState({\n                    genreTitles: [...this.state.genreTitles,<br/>,<li>{titleLoop}<br/><img src={imageLoop} alt=\"anime_photo\"></img></li>],\n                    loadMoreTitles: <button onClick={this.onSubmitGenre}>More Titles?</button>\n                }, () => {\n                    this.setState({\n                        loadingtoggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    render() {\n        let displayAnimeInfo = {\n            display: 'none'\n        }\n        let loading = {\n            display: 'none'\n        }\n        if(this.state.toggleView === 'off') {\n            displayAnimeInfo = {\n                display: ''\n            }\n        }\n        if(this.state.loadingtoggle === 'off') {\n            loading = {\n                display: ''\n            }\n        }\n\n        return(\n            <div>\n                <div className=\"header\">\n                    <h1>Anime search</h1>\n                </div>\n                <div className=\"searchname\">\n                    <label htmlFor=\"name\">Search by name</label>\n                    <br/>\n                    <textarea className=\"name\" name=\"name\" value={this.state.searchNameInput} onChange={this.searchName} cols=\"50\" rows=\"1\"  placeholder=\"search by name\" />\n                </div>\n                <br/>\n                <div className=\"submitnamediv\">\n                    <button className=\"submitnamebutton\" onClick={this.onSubmitName}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"searchgenre\">\n                    <label htmlFor=\"genre\">Search by genre</label>\n                    <br/>\n                    <Select className=\"genreselect\" name=\"genre\" value={this.state.searchGenreInput} onChange={this.searchGenre} options={genreMap} placeholder=\"search by genre\" />\n                </div>\n                <br/>\n                <div className=\"submitgenrediv\">\n                    <button className=\"submitgenrebutton\" onClick={this.onSubmitGenre}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"loadingdiv\" style={loading}>\n                <p>Searching...</p>\n                </div>\n                <div className=\"genreresponse\">\n                    <ul className=\"genretitles\">{this.state.genreTitles}</ul>\n                    <p>{this.state.loadMoreTitles}</p>\n                </div>\n                <br/>\n                <div className=\"nameresponse\" style={displayAnimeInfo}>\n                    <p>{this.state.animeName}</p>\n                    <p>Episode Count: {this.state.animeEpisodeCount}</p>\n                    <p><img src={this.state.animeImage} alt=\"anime_image\"></img></p>\n                    <p>{this.state.animeSynopsis}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default First;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport First from './components/first.js'\n\nconst App = () => {\n  return (\n  <div>\n    <First/>\n  </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}