{"version":3,"sources":["components/first.js","index.js"],"names":["jikanBaseUrl","First","state","toggleView","loadingToggle","jikanUrl","searchNameInput","yourName","nameTitles","searchGenreInput","yourGenre","genreTitles","genrePage","searchName","bind","onSubmitName","searchGenre","onSubmitGenre","makeNameCall","makeGenreCall","onMoreInfo","onMoreInfoContinue","event","this","setState","target","value","console","log","page","moreInfoName","fetch","then","response","json","data","moreInfoMalId","animeTitle","animeImage","j","length","animeName","animeSynopsis","animeEpisodeCount","src","alt","onClick","i","titleLoop","imageLoop","style","flexDirection","loadMoreTitles","displaySearch","display","loading","className","htmlFor","name","onChange","cols","rows","placeholder","options","genreMap","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd5ee0f5.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport genreMap from './genremap.json'\n\n\nconst jikanBaseUrl = 'https://api.jikan.moe/v3/'\n\nclass First extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            toggleView: 'on',\n            loadingToggle: 'on',\n            jikanUrl: '',\n            searchNameInput: '',\n            yourName: '',\n            nameTitles: [],\n            searchGenreInput: '',\n            yourGenre: '',\n            genreTitles: [],\n            genrePage: 1,\n        }\n\n        this.searchName = this.searchName.bind(this)\n        this.onSubmitName = this.onSubmitName.bind(this)\n        this.searchGenre = this.searchGenre.bind(this)\n        this.onSubmitGenre = this.onSubmitGenre.bind(this)\n        this.makeNameCall = this.makeNameCall.bind(this)\n        this.makeGenreCall = this.makeGenreCall.bind(this)\n        this.onMoreInfo = this.onMoreInfo.bind(this)\n        this.onMoreInfoContinue = this.onMoreInfoContinue.bind(this)\n    }\n\n    searchName(event) {\n        this.setState({\n            searchNameInput: event.target.value,\n            yourName: event.target.value,\n        }, () => {\n            console.log(this.state.yourName)\n        })\n    }\n\n    searchGenre(event) {\n        this.setState({\n            searchGenreInput: event,\n            yourGenre: event.value,\n        }, () => {\n            console.log(this.state.yourGenre)\n        })\n    }\n\n    onSubmitName() {\n        if(this.state.yourName !== '') {\n            this.setState({\n                toggleView: 'off',\n                loadingToggle: 'off',\n                jikanUrl: jikanBaseUrl + 'search/anime?q=' + this.state.yourName,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.makeNameCall()\n            })\n        }\n    }\n\n    onSubmitGenre(page) {\n        page = this.state.genrePage\n        if(this.state.yourGenre !== '') {\n            this.setState({\n                loadingToggle: 'off',\n                toggleView: 'off',\n                jikanUrl: jikanBaseUrl + 'genre/anime/' + this.state.yourGenre + '/' + page,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.setState({\n                    genrePage: this.state.genrePage + 1\n                })\n                this.makeGenreCall()\n            })\n        }\n    }\n\n    onMoreInfo(event) {\n        // console.log(event.target.value)\n        this.setState({\n            moreInfoName: event.target.value,\n            toggleView: 'on',\n            loadingToggle: 'off',\n        }, () => {\n            console.log(this.state.moreInfoName)\n            this.setState({\n                jikanUrl: jikanBaseUrl + 'search/anime?q=' + this.state.moreInfoName,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                fetch(this.state.jikanUrl)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({\n                        moreInfoMalId: [data['results'][0]['mal_id']]\n                    }, () => {\n                        console.log(this.state.moreInfoMalId)\n                        this.onMoreInfoContinue()\n                    })\n                })\n            })\n        })\n    }\n\n    onMoreInfoContinue() {\n        this.setState({\n            jikanUrl: jikanBaseUrl + 'anime/' + this.state.moreInfoMalId\n        }, () => {\n            console.log(this.state.jikanUrl)\n            fetch(this.state.jikanUrl)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    animeTitle: [data['title']],\n                    animeImage: [data['image_url']]\n                }, () => {\n                    this.setState({\n                        loadingToggle: 'on',\n                    })\n                })\n            })\n        })\n    }\n\n    makeNameCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            // console.log(data)\n            for(var j = 0; j < data['results'].length / 2; j++) {\n                var animeName = [data['results'][j]['title']]\n                var animeImage = [data['results'][j]['image_url']]\n                var animeSynopsis = [data['results'][j]['synopsis']]\n                var animeEpisodeCount = [data['results'][j]['episodes']]\n                this.setState({\n                    nameTitles: [...this.state.nameTitles,[\n                        <br/>,\n                        animeName,\n                        <p>Episode Count: {animeEpisodeCount}</p>,\n                        <p><img src={animeImage} alt=\"anime_image\"></img></p>,\n                        <p>{animeSynopsis}</p>,\n                        <button value={animeName} onClick={this.onMoreInfo}>More Info</button>,\n                        <br/>]],\n                    \n                }, () => {\n                    this.setState({\n                        loadingToggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    makeGenreCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            for(var i = 0; i < data['anime'].length; i++) {\n                var titleLoop = [data['anime'][i]['title']]\n                var imageLoop = [data['anime'][i]['image_url']]\n                this.setState({\n                    genreTitles: [...this.state.genreTitles,\n                    <br/>,\n                    <li style={{flexDirection: 'column'}}>{titleLoop}<br/><img src={imageLoop} alt=\"anime_photo\"></img><br/><button value={titleLoop} onClick={this.onMoreInfo}>More Info</button></li>],\n                    loadMoreTitles: <button onClick={this.onSubmitGenre}>More?</button>\n                }, () => {\n                    this.setState({\n                        loadingToggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    render() {\n        let displaySearch = {\n            display: 'none'\n        }\n        let loading = {\n            display: 'none'\n        }\n        if(this.state.toggleView === 'off') {\n            displaySearch = {\n                display: ''\n            }\n        }\n        if(this.state.loadingToggle === 'off') {\n            loading = {\n                display: ''\n            }\n        }\n\n        return(\n            <div>\n                <div className=\"header\">\n                    <h1>Anime search</h1>\n                </div>\n                <div className=\"searchname\">\n                    <label htmlFor=\"name\">Search by name</label>\n                    <br/>\n                    <textarea className=\"name\" name=\"name\" value={this.state.searchNameInput} onChange={this.searchName} cols=\"50\" rows=\"1\"  placeholder=\"search by name\" />\n                </div>\n                <br/>\n                <div className=\"submitnamediv\">\n                    <button className=\"submitnamebutton\" onClick={this.onSubmitName}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"searchgenre\">\n                    <label htmlFor=\"genre\">Search by genre</label>\n                    <br/>\n                    <br/>\n                    <Select className=\"genreselect\" name=\"genre\" value={this.state.searchGenreInput} onChange={this.searchGenre} options={genreMap} placeholder=\"search by genre\" />\n                </div>\n                <br/>\n                <div className=\"submitgenrediv\">\n                    <button className=\"submitgenrebutton\" onClick={this.onSubmitGenre}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"loadingdiv\" style={loading}>\n                <p>Searching...</p>\n                </div>\n                <div className=\"genreresponse\" style={displaySearch}>\n                    <ul className=\"genretitles\">{this.state.genreTitles}</ul>\n                    <p>{this.state.loadMoreTitles}</p>\n                </div>\n                <br/>\n                <div className=\"nameresponse\" style={displaySearch}>\n                    {this.state.nameTitles}\n                </div>\n                <br/>\n                <div className=\"moreinfo\">\n                    <p>{this.state.animeTitle}</p>\n                    <p><img src={this.state.animeImage} alt=\"cover art\"></img></p>\n                    <p>{this.state.animeTitle}</p>\n                    <p>{this.state.animeTitle}</p>\n                    <p>{this.state.animeTitle}</p>\n                    <p>{this.state.animeTitle}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default First;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport First from './components/first.js'\n\nconst App = () => {\n  return (\n  <div>\n    <First/>\n  </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}