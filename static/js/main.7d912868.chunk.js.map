{"version":3,"sources":["components/first.js","index.js"],"names":["jikanBaseUrl","First","state","toggleView","loadingToggle","toggleMoreInfo","jikanUrl","searchNameInput","yourName","nameTitles","searchGenreInput","yourGenre","genreTitles","genrePage","searchName","bind","onSubmitName","searchGenre","onSubmitGenre","makeNameCall","makeGenreCall","onMoreInfo","onMoreInfoContinue","event","this","setState","target","value","console","log","page","moreInfoMalId","fetch","then","response","json","data","animeTitle","animeTitleEnglish","animeTitleJapanese","animeTitlesOthers","animeImage","animeSynopsis","animeTrailer","animeType","animeSource","animeEpisodeCount","animeStatus","animeAired","j","length","animeName","animeCode","src","alt","onClick","i","titleLoop","imageLoop","titleCode","style","flexDirection","loadMoreTitles","displaySearch","display","loading","displayMoreInfo","className","htmlFor","name","onChange","cols","rows","placeholder","options","genreMap","title","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d912868.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport genreMap from './genremap.json'\n\n\nconst jikanBaseUrl = 'https://api.jikan.moe/v3/'\n\nclass First extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            toggleView: 'on',\n            loadingToggle: 'on',\n            toggleMoreInfo: 'on',\n            jikanUrl: '',\n            searchNameInput: '',\n            yourName: '',\n            nameTitles: [],\n            searchGenreInput: '',\n            yourGenre: '',\n            genreTitles: [],\n            genrePage: 1,\n        }\n\n        this.searchName = this.searchName.bind(this)\n        this.onSubmitName = this.onSubmitName.bind(this)\n        this.searchGenre = this.searchGenre.bind(this)\n        this.onSubmitGenre = this.onSubmitGenre.bind(this)\n        this.makeNameCall = this.makeNameCall.bind(this)\n        this.makeGenreCall = this.makeGenreCall.bind(this)\n        this.onMoreInfo = this.onMoreInfo.bind(this)\n        this.onMoreInfoContinue = this.onMoreInfoContinue.bind(this)\n    }\n\n    searchName(event) {\n        this.setState({\n            searchNameInput: event.target.value,\n            yourName: event.target.value,\n        }, () => {\n            console.log(this.state.yourName)\n        })\n    }\n\n    searchGenre(event) {\n        this.setState({\n            searchGenreInput: event,\n            yourGenre: event.value,\n        }, () => {\n            console.log(this.state.yourGenre)\n        })\n    }\n\n    onSubmitName() {\n        if(this.state.yourName !== '') {\n            this.setState({\n                toggleView: 'off',\n                loadingToggle: 'off',\n                jikanUrl: jikanBaseUrl + 'search/anime?q=' + this.state.yourName,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.makeNameCall()\n            })\n        }\n    }\n\n    onSubmitGenre(page) {\n        page = this.state.genrePage\n        if(this.state.yourGenre !== '') {\n            this.setState({\n                loadingToggle: 'off',\n                toggleView: 'off',\n                jikanUrl: jikanBaseUrl + 'genre/anime/' + this.state.yourGenre + '/' + page,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.setState({\n                    genrePage: this.state.genrePage + 1\n                })\n                this.makeGenreCall()\n            })\n        }\n    }\n\n    onMoreInfo(event) {\n        console.log(event.target.value)\n        this.setState({\n            moreInfoMalId: event.target.value,\n            toggleView: 'on',\n            toggleMoreInfo: 'off'\n        }, () => {\n            this.onMoreInfoContinue()\n        })\n    }\n\n\n    onMoreInfoContinue() {\n        this.setState({\n            jikanUrl: jikanBaseUrl + 'anime/' + this.state.moreInfoMalId\n        }, () => {\n            console.log(this.state.jikanUrl)\n            fetch(this.state.jikanUrl)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    animeTitle: [data['title']],\n                    animeTitleEnglish: [data['title_english']],\n                    animeTitleJapanese: [data['title_japanese']],\n                    animeTitlesOthers: [data['title_synonyms']],\n                    animeImage: [data['image_url']],\n                    animeSynopsis: [data['synopsis']],\n                    animeTrailer: [data['trailer_url']],\n                    animeType: [data['type']],\n                    animeSource: [data['source']],\n                    animeEpisodeCount: [data['episodes']],\n                    animeStatus: [data['status']],\n                    animeAired: [data['aired']['string']],\n                }, () => {\n                    this.setState({\n                        loadingToggle: 'on',\n                        toggleMoreInfo: 'off'\n                    })\n                })\n            })\n        })\n    }\n\n    makeNameCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            // console.log(data)\n            for(var j = 0; j < data['results'].length / 2; j++) {\n                var animeName = [data['results'][j]['title']]\n                var animeCode = [data['results'][j]['mal_id']]\n                var animeImage = [data['results'][j]['image_url']]\n                var animeSynopsis = [data['results'][j]['synopsis']]\n                var animeEpisodeCount = [data['results'][j]['episodes']]\n                this.setState({\n                    nameTitles: [...this.state.nameTitles,[\n                        <br/>,\n                        animeName,\n                        <p>Episode Count: {animeEpisodeCount}</p>,\n                        <p><img src={animeImage} alt=\"anime_image\"></img></p>,\n                        <p>{animeSynopsis}</p>,\n                        <button value={animeCode} onClick={this.onMoreInfo}>More Info</button>,\n                        <br/>]],\n                    \n                }, () => {\n                    this.setState({\n                        loadingToggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    makeGenreCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            for(var i = 0; i < data['anime'].length; i++) {\n                var titleLoop = [data['anime'][i]['title']]\n                var imageLoop = [data['anime'][i]['image_url']]\n                var titleCode = [data['anime'][i]['mal_id']]\n                this.setState({\n                    genreTitles: [...this.state.genreTitles,\n                    <br/>,\n                    <li style={{flexDirection: 'column'}}>{titleLoop}<br/><img src={imageLoop} alt=\"anime_photo\"></img><br/><button value={titleCode} onClick={this.onMoreInfo}>More Info</button></li>],\n                    loadMoreTitles: <button onClick={this.onSubmitGenre}>More?</button>\n                }, () => {\n                    this.setState({\n                        loadingToggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    render() {\n        let displaySearch = {\n            display: 'none'\n        }\n        let loading = {\n            display: 'none'\n        }\n        let displayMoreInfo = {\n            display: 'none'\n        }\n        if(this.state.toggleView === 'off') {\n            displaySearch = {\n                display: ''\n            }\n        }\n        if(this.state.loadingToggle === 'off') {\n            loading = {\n                display: ''\n            }\n        }\n        if(this.state.toggleMoreInfo === 'off') {\n            displayMoreInfo = {\n                display: ''\n            }\n        }\n\n        return(\n            <div>\n                <div className=\"header\">\n                    <h1>Anime search</h1>\n                    <p><i>myanimelist.net</i></p>\n                    <p><i>Jikan API</i></p>\n                <br/>\n                <hr/>\n                </div>\n                <br/>\n                <div className=\"searchname\">\n                    <label htmlFor=\"name\">Search by name</label>\n                    <br/>\n                    <textarea className=\"name\" name=\"name\" value={this.state.searchNameInput} onChange={this.searchName} cols=\"50\" rows=\"1\"  placeholder=\"search by name\" />\n                </div>\n                <br/>\n                <div className=\"submitnamediv\">\n                    <button className=\"submitnamebutton\" onClick={this.onSubmitName}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"searchgenre\">\n                    <label htmlFor=\"genre\">Search by genre</label>\n                    <br/>\n                    <br/>\n                    <Select className=\"genreselect\" name=\"genre\" value={this.state.searchGenreInput} onChange={this.searchGenre} options={genreMap} placeholder=\"search by genre\" />\n                </div>\n                <br/>\n                <div className=\"submitgenrediv\">\n                    <button className=\"submitgenrebutton\" onClick={this.onSubmitGenre}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"loadingdiv\" style={loading}>\n                <p>Searching...</p>\n                </div>\n                <div className=\"genreresponse\" style={displaySearch}>\n                    <ul className=\"genretitles\">{this.state.genreTitles}</ul>\n                    <p>{this.state.loadMoreTitles}</p>\n                </div>\n                <br/>\n                <div className=\"nameresponse\" style={displaySearch}>\n                    {this.state.nameTitles}\n                </div>\n                <br/>\n                <div className=\"moreinfo\" style={displayMoreInfo}>\n                    <p><b>{this.state.animeTitle}</b></p>\n                    <p>English Title: {this.state.animeTitleEnglish}</p>\n                    <p>Japanese Title: {this.state.animeTitleJapanese}</p>\n                    <p>Other Titles: {this.state.animeTitlesOthers}</p>\n                    <p>Type: {this.state.animeType}</p>\n                    <p>Source: {this.state.animeSource}</p>\n                    <p>Episode Count: {this.state.animeEpisodeCount}</p>\n                    <p>Status: {this.state.animeStatus}</p>\n                    <p>Aired: {this.state.animeAired}</p>\n                    <p><img src={this.state.animeImage} alt=\"cover art\"></img></p>\n                    <p>{this.state.animeSynopsis}</p>\n                    <p><iframe className=\"trailerframe\" src={this.state.animeTrailer} title=\"Trailer\"></iframe></p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default First;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport First from './components/first.js'\n\nconst App = () => {\n  return (\n  <div>\n    <First/>\n  </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}