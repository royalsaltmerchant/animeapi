{"version":3,"sources":["components/first.js","index.js"],"names":["First","state","toggleView","loadingToggle","jikanUrl","searchNameInput","yourName","nameTitles","searchGenreInput","yourGenre","genreTitles","genrePage","searchName","bind","onSubmitName","searchGenre","onSubmitGenre","makeNameCall","makeGenreCall","onMoreInfo","event","this","setState","target","value","console","log","jikanBaseUrl","page","fetch","then","response","json","data","j","length","animeName","animeImage","animeSynopsis","animeEpisodeCount","src","alt","i","titleLoop","imageLoop","loadMoreTitles","onClick","loadingtoggle","displayAnimeInfo","display","loading","className","htmlFor","name","onChange","cols","rows","placeholder","options","genreMap","style","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bded8b7.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport genreMap from './genremap.json'\n\n\nconst jikanBaseUrl = 'https://api.jikan.moe/v3/'\n\nclass First extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            toggleView: 'on',\n            loadingToggle: 'on',\n            jikanUrl: '',\n            searchNameInput: '',\n            yourName: '',\n            nameTitles: [],\n            searchGenreInput: '',\n            yourGenre: '',\n            genreTitles: [],\n            genrePage: 1,\n        }\n\n        this.searchName = this.searchName.bind(this)\n        this.onSubmitName = this.onSubmitName.bind(this)\n        this.searchGenre = this.searchGenre.bind(this)\n        this.onSubmitGenre = this.onSubmitGenre.bind(this)\n        this.makeNameCall = this.makeNameCall.bind(this)\n        this.makeGenreCall = this.makeGenreCall.bind(this)\n        this.onMoreInfo = this.onMoreInfo.bind(this)\n    }\n\n    searchName(event) {\n        this.setState({\n            searchNameInput: event.target.value,\n            yourName: event.target.value,\n        }, () => {\n            console.log(this.state.yourName)\n        })\n    }\n\n    searchGenre(event) {\n        this.setState({\n            searchGenreInput: event,\n            yourGenre: event.value,\n        }, () => {\n            console.log(this.state.yourGenre)\n        })\n    }\n\n    onSubmitName() {\n        if(this.state.yourName !== '') {\n            this.setState({\n                toggleView: 'off',\n                loadingToggle: 'off',\n                jikanUrl: jikanBaseUrl + 'search/anime?q=' + this.state.yourName,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.makeNameCall()\n            })\n        }\n    }\n\n    onSubmitGenre(page) {\n        page = this.state.genrePage\n        if(this.state.yourGenre !== '') {\n            this.setState({\n                loadingToggle: 'off',\n                jikanUrl: jikanBaseUrl + 'genre/anime/' + this.state.yourGenre + '/' + page,\n            }, () => {\n                console.log(this.state.jikanUrl)\n                this.setState({\n                    genrePage: this.state.genrePage + 1\n                })\n                this.makeGenreCall()\n            })\n        }\n    }\n\n    onMoreInfo() {\n        this.setState({\n            loadingToggle: 'off',\n        })\n    }\n\n    makeNameCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n            for(var j = 0; j < data.['results'].length; j++) {\n                var animeName = [data['results'][j]['title']]\n                var animeImage = [data['results'][j]['image_url']]\n                var animeSynopsis = [data['results'][j]['synopsis']]\n                var animeEpisodeCount = [data['results'][j]['episodes']]\n                this.setState({\n                    nameTitles: [...this.state.nameTitles,\n                        <p>{animeName}</p>,\n                        <p>Episode Count: {animeEpisodeCount}</p>,\n                        <p><img src={animeImage} alt=\"anime_image\"></img></p>,\n                        <p>{animeSynopsis}</p>,\n                        <button>More Info</button>,\n                        <br/>],\n                    \n                }, () => {\n                    console.log(this.state.animeImage)\n                    this.setState({\n                        loadingToggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    makeGenreCall() {    \n        fetch(this.state.jikanUrl)\n        .then(response => response.json())\n        .then(data => {\n            for(var i = 0; i < data['anime'].length; i++) {\n                var titleLoop = [data['anime'][i]['title']]\n                var imageLoop = [data['anime'][i]['image_url']]\n                this.setState({\n                    genreTitles: [...this.state.genreTitles,<br/>,<li>{titleLoop}<br/><img src={imageLoop} alt=\"anime_photo\"></img></li>],\n                    loadMoreTitles: <button onClick={this.onSubmitGenre}>More Titles?</button>\n                }, () => {\n                    this.setState({\n                        loadingtoggle: 'on',\n                    })\n                })\n            }\n        })\n    }\n\n    render() {\n        let displayAnimeInfo = {\n            display: 'none'\n        }\n        let loading = {\n            display: 'none'\n        }\n        if(this.state.toggleView === 'off') {\n            displayAnimeInfo = {\n                display: ''\n            }\n        }\n        if(this.state.loadingtoggle === 'off') {\n            loading = {\n                display: ''\n            }\n        }\n\n        return(\n            <div>\n                <div className=\"header\">\n                    <h1>Anime search</h1>\n                </div>\n                <div className=\"searchname\">\n                    <label htmlFor=\"name\">Search by name</label>\n                    <br/>\n                    <textarea className=\"name\" name=\"name\" value={this.state.searchNameInput} onChange={this.searchName} cols=\"50\" rows=\"1\"  placeholder=\"search by name\" />\n                </div>\n                <br/>\n                <div className=\"submitnamediv\">\n                    <button className=\"submitnamebutton\" onClick={this.onSubmitName}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"searchgenre\">\n                    <label htmlFor=\"genre\">Search by genre</label>\n                    <br/>\n                    <Select className=\"genreselect\" name=\"genre\" value={this.state.searchGenreInput} onChange={this.searchGenre} options={genreMap} placeholder=\"search by genre\" />\n                </div>\n                <br/>\n                <div className=\"submitgenrediv\">\n                    <button className=\"submitgenrebutton\" onClick={this.onSubmitGenre}>Submit</button>\n                </div>\n                <br/>\n                <div className=\"loadingdiv\" style={loading}>\n                <p>Searching...</p>\n                </div>\n                <div className=\"genreresponse\">\n                    <ul className=\"genretitles\">{this.state.genreTitles}</ul>\n                    <p>{this.state.loadMoreTitles}</p>\n                </div>\n                <br/>\n                <div className=\"nameresponse\" style={displayAnimeInfo}>\n                    {this.state.nameTitles}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default First;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport First from './components/first.js'\n\nconst App = () => {\n  return (\n  <div>\n    <First/>\n  </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}